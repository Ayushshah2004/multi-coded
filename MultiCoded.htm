<html>
<head>
<title>Multi-Coded</title>
</head>
<body>
<h1>Multi-Coded</h1>
<h2>About</h2>
<p>Welcome to Multi-Coded! In order to be an elite coder, one needs to learn about languages like Java, Python, and C# that are used prominantly in companies like Google, Microsoft, and Oracle. This website was made to help passionate coders naviagate the differences between these three languages, comparing things like data types, Strings, Arrays, OOP, etc. that every coder needs to know. With this website I hope to teach every coder the basics in all three essential languages so you are prepared to code anything for anyone. We will cover seven topics in depth:</p>
<ul>
	<li> <a href = "file:///C:/Users/nehas/Documents/MultiCoded.htm"> Data Types <a> </li>
	<li>Strings</li>
	<li>Printing Statements</li>
	<li>Building Classes and Methods</li>
	<li>If Statements</li>
	<li>Loops</li>
	<li>Arrays/ArrayLists</li>
</ul>
<p>Now that you know how this works, let's get started!</p>
<h2>Data Types</h2>
<p> <strong>Data Types</strong> are how a coder declares a <strong>variable</strong>, containers for storing data values, to hold a certain value that is either a word, number, etc. Data Types are fundamental to Computer Science, and without them, code would not be able to function as smoothly as it has today, so let's go through data types in each language.</p>
<p>Data Types are typically divided into two groups:</p>
<ul>
	<li>Primative data types: int, double, byte, short, long, float, boolean, char</li>
	<li>Non-Primative data types: String, Arrays, Classes</li>
</ul>
<p> This whole section will focus on Primative Data Types, as the Non-Primative Data Types will be talked about later due to their complexity.</p>

<h3>Java</h3>
<p>Before you understand data types, it is important to understand the basic declaration for a Java variable:</p>
<p> type VariableName = value; </p>
<p>Now that you know that, let's move on.</p>
<p>A <strong>primative data type</strong> specifies the size and type of variable values, with no additional methods, though a seemingly small specification, it is important to know when we compare them to non-primative data types. The following table shows all of java's primative data types with their proper syntax, its size, the variable's default specification if the coder doesn't specify it, and its uses.</p>
<img src = "https://media.geeksforgeeks.org/wp-content/cdn-uploads/20191105122725/Primitive-Data-Types-in-Java-4.jpg" width = "800" height = "300" />
<p> Though this may appear daunting, let's go through them.</p>

<h4>int</h4>
<p>int is the most commonly used, and the most preferred <strong>Integer Type</strong> of variable people use when coding due to its large size and simplicity to write. As shown in the table, int can store all whole numbers within the range -2147483648 to 2147483647 (FYI, all values typically store values from a range of -max+1 to the max). </p>
<p> The way to create an int is: int valName = size; </p>

<h4>byte</h4>
<p> byte is another Integer Type that only stores values ranging form -128 to 127, that is only preferred to int and other Integer Data Types when you are accounting for memory size.</p>
<p> The way to create a byte is: byte valName = size; </p>

<h4>short</h4>
<p> short is another Integer Type that stores whole numbers from -32768 to 32767. Like I stated before, you will typically only use int, but this is another value you could use if you really want to.</p>
<p> The way to create a short is: short valName = size; </p>

<h4>long</h4>
<p> long's ability to hold large whole numbers ranging from -9223372036854775808 to 9223372036854775807 makes it optimal to use when int is too small to hold a certain value.</p>
<p> The declaration for long is different than the other Integer Data Types as immediently after the value you assign it, you need an "L" to specify it as long.</p>
<p> The way to declare long is: long valName = sizeL;</p>

<h4>double</h4>
<p> double is the most prominantly used and preferred <strong>Floating Point Type</strong>, a value that stores decimal values, due to its ability to store values that have 15 values after the decimal, something important when it comes to percision.</p>
<p> The typical declaration for a double is: double valName = size;</p>
<p> But you could also include a "d" after it like a long and declare it as: double valName = sized; </p>

<h4>float</h4>
<p> float is a Floating Point Type that stores values that have at most 6 to 7 numbers after the decimal and stores values ranging from 3.4eâˆ’038 to 3.4e+038 </p>
<p> To declare a float you MUST include an f after your decimal number. So the declaration should look like: float valName = sizef; </p>

<h4>boolean</h4>
<p> boolean is one of the few primitive data types that does not consist of numbers, rather boolean is used to create true or false values that are important for conditionals that are in seen in if statements and loops</p>
<p> The declaration for a boolean value could only be one of two things, true or false, so the declaration could be: boolean valName = true; or boolean valName = false; </p>

<h4>char</h4>
<p> char stores a single letter or character. If you want to create something with more than one character, you may need a <strong>String</strong>, which we will go over later, just know that a String is like an unofficial primitive data types that has methods and makes reference to an object.</p>
<p> to declare a char you need either "" or '' around the letter. So the declaration should look like: char valName = 'single-character';</p>








</body>

</html>